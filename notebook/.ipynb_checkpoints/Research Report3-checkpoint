{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 사용 패키지 소개"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1128,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "# Preprocessing\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "import random\n",
    "from konlpy.utils import pprint\n",
    "from konlpy.tag import *\n",
    "\n",
    "# Visualization\n",
    "import matplotlib.pylab as plt\n",
    "import seaborn as sns\n",
    "\n",
    "# scikit-learn\n",
    "from sklearn.feature_extraction.text import CountVectorizer, TfidfVectorizer\n",
    "from sklearn.cluster import KMeans, AffinityPropagation, DBSCAN, AgglomerativeClustering\n",
    "from sklearn.metrics import silhouette_score\n",
    "\n",
    "# gensim\n",
    "from gensim import models\n",
    "from gensim.corpora import mmcorpus, Dictionary\n",
    "from gensim.models import lsimodel, ldamodel, tfidfmodel, rpmodel, logentropy_model, TfidfModel, LsiModel, LdaModel\n",
    "from gensim import matutils, corpora\n",
    "from gensim.models.doc2vec import TaggedDocument\n",
    "from gensim.models import doc2vec"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 448,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "# set to show all text in the cell\n",
    "pd.set_option('display.max_colwidth', -1)\n",
    "\n",
    "# 한글 표시\n",
    "from matplotlib import font_manager, rc\n",
    "font_name = font_manager.FontProperties(fname=\"/Library/Fonts/NanumGothic.ttf\").get_name()\n",
    "rc('font', family=font_name)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 795,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "def print_topwords(df, num, bar):\n",
    "    \n",
    "    temp_cor = df.text.values\n",
    "    temp_vec = CountVectorizer(tokenizer=nav_tokenizer, stop_words=stopwords + mask1)\n",
    "    temp_vec.fit(temp_cor)\n",
    "    \n",
    "    temp = pd.DataFrame(temp_vec.vocabulary_.keys(), columns=['word'])\n",
    "    temp['idx'] = temp_vec.vocabulary_.values()\n",
    "    temp.sort_values(by='idx', inplace=True)\n",
    "    temp['count'] = temp_vec.transform(temp_cor).toarray().sum(axis=0)\n",
    "    \n",
    "    topwords = temp.sort_values(['count'], ascending=False)[:num]\n",
    "    for i in range(num):\n",
    "        print(topwords['word'].values[i]),\n",
    "    \n",
    "    if bar == True:\n",
    "        fig, ax = plt.subplots()\n",
    "        plt.bar(range(num), topwords['count'].values, align='center')\n",
    "        plt.xticks([x for x in range(num)], topwords['word'].values)\n",
    "        ax.set_xticklabels(ax.xaxis.get_majorticklabels(), rotation=90)\n",
    "        plt.tight_layout()\n",
    "        plt.show()\n",
    "    else:\n",
    "        pass"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<br>\n",
    "# 데이터 소개"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1137,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>text</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>uid</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>28618460</th>\n",
       "      <td>매번 사용하는 제품인데 저렴하게 잘 삿습니당</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28608506</th>\n",
       "      <td>몇 년째 쓰는 제품이예요~\\n다른 기초화장품 없이 피지오겔크링과 선크림으로\\n피부가 좋아졌 어요~~ 여름이면 항상 얼굴이  따끔거렸는데 \\n그것도 다 없어지고~  암튼 전 화장품은 이거 하나만발라요~\\n자극도 없고 완전 좋은 제품입니다~~</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28584972</th>\n",
       "      <td>조금 기름진느낌이 없지않아있어요</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28584914</th>\n",
       "      <td>가격부담이 되도 계속 쓰고 있는 피지오겔 크림\\n귀찮을때 이거 하나만 바르고 자도 다음날 화장 잘먹고 얼굴에서 광나요\\n전 밤엔 듬뿍 아침엔 적당량만 발라요(집순이일땐 듬뿍)\\n건성 민감성 피부에 좋아요 무향에 자극없고 보습력 좋아요\\n로켓배송 덕분에 빠르게 쓸 수 있어서 좋았어요</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28581673</th>\n",
       "      <td>촉촉해서 수분크림대신바르는데 좋아요</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28567308</th>\n",
       "      <td>배송빨라 좋네요</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28542147</th>\n",
       "      <td>1. 배송 : 로켓 아니어도 괜찬은데, 다음날 바로 도착헸네요. 배송기사님 감사합니다.\\n2. 제품 : 피지오겔 크림 똑같은 것으로 또 주문해서 사용합니다. 저는 민감피부라 무향을 선호해서 무향이라 좋고, 사계절 내내 사용하기 무리없구요. 여름엔 생각보단 덜 번들거리고, 겨울엔 저녁에 바르면 아침까지 건조함이 없어 좋습니다. 주문하면서 사용기한 내심 걱정했는데, 이번에도 안심이네요. (제가 사용하는 기간까지 넉넉해요-유통기한이 내년5월?6월까지인것 같았어요. 제품받고 며칠지난터라 정확한 기억이 안남.)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28465156</th>\n",
       "      <td>피지오겔~7년째사용중~~</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28463679</th>\n",
       "      <td>항상 쓰던 제품입니다 좋아요~~</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28454963</th>\n",
       "      <td>배송도 빠르고 좋으네영</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                                                                                                                                                                                                                                                                 text\n",
       "uid                                                                                                                                                                                                                                                                                                  \n",
       "28618460  매번 사용하는 제품인데 저렴하게 잘 삿습니당                                                                                                                                                                                                                                                                   \n",
       "28608506  몇 년째 쓰는 제품이예요~\\n다른 기초화장품 없이 피지오겔크링과 선크림으로\\n피부가 좋아졌 어요~~ 여름이면 항상 얼굴이  따끔거렸는데 \\n그것도 다 없어지고~  암튼 전 화장품은 이거 하나만발라요~\\n자극도 없고 완전 좋은 제품입니다~~                                                                                                                                                      \n",
       "28584972  조금 기름진느낌이 없지않아있어요                                                                                                                                                                                                                                                                          \n",
       "28584914  가격부담이 되도 계속 쓰고 있는 피지오겔 크림\\n귀찮을때 이거 하나만 바르고 자도 다음날 화장 잘먹고 얼굴에서 광나요\\n전 밤엔 듬뿍 아침엔 적당량만 발라요(집순이일땐 듬뿍)\\n건성 민감성 피부에 좋아요 무향에 자극없고 보습력 좋아요\\n로켓배송 덕분에 빠르게 쓸 수 있어서 좋았어요                                                                                                                              \n",
       "28581673  촉촉해서 수분크림대신바르는데 좋아요                                                                                                                                                                                                                                                                        \n",
       "28567308  배송빨라 좋네요                                                                                                                                                                                                                                                                                   \n",
       "28542147  1. 배송 : 로켓 아니어도 괜찬은데, 다음날 바로 도착헸네요. 배송기사님 감사합니다.\\n2. 제품 : 피지오겔 크림 똑같은 것으로 또 주문해서 사용합니다. 저는 민감피부라 무향을 선호해서 무향이라 좋고, 사계절 내내 사용하기 무리없구요. 여름엔 생각보단 덜 번들거리고, 겨울엔 저녁에 바르면 아침까지 건조함이 없어 좋습니다. 주문하면서 사용기한 내심 걱정했는데, 이번에도 안심이네요. (제가 사용하는 기간까지 넉넉해요-유통기한이 내년5월?6월까지인것 같았어요. 제품받고 며칠지난터라 정확한 기억이 안남.)\n",
       "28465156  피지오겔~7년째사용중~~                                                                                                                                                                                                                                                                              \n",
       "28463679  항상 쓰던 제품입니다 좋아요~~                                                                                                                                                                                                                                                                          \n",
       "28454963  배송도 빠르고 좋으네영                                                                                                                                                                                                                                                                               "
      ]
     },
     "execution_count": 1137,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# file path\n",
    "PATH = '../dataset/physiogel.csv'\n",
    "df0 = pd.read_csv(PATH)\n",
    "df00 = df0.dropna(subset=['text'])\n",
    "temp = [x.strip().decode('utf-8') for x in df00['text'].values] # erase back and foward spaces/ decoding to unicode \n",
    "df = pd.DataFrame(data=temp, index=df00['uid'], columns=['text'])\n",
    "df.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1178,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(3072,)"
      ]
     },
     "execution_count": 1178,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "corpus = df.text.values\n",
    "corpus.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1179,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\nb7ZtO9u3b3eGhoayzy2Vvo2MjDjbtm3LPv7617/uvPjii1XdtxdffNE5efKk88d//MeO4xT+d1XJ\n/byxb3NlvlMcpzr/febq29zvFMepnr6ZTz311FP+/TpR2fr6+lRXV6d7771XkmTbts6cOaNPfOIT\nPrdsYWZmZvTyyy+rpaVl3n6Nj49XXX+/+93vqrW1VW1tbfr5z3+u+vr6JdG3X/7yl7p48aJ+9KMf\n6Xvf+55GR0eVSCSWRN/C4bD6+vp0zz33yDRN/eAHP9DKlSvV1NRUtX376Ec/qpUrV+o73/mOtm7d\nmvO7I1d/KrmfN/Ztrsx3ypYtWwruc6X27cbvlMwmZ9XQN9fL1m5lS22zm97eXj322GNLZnOfN954\nQ5cvX9anP/3p7HNLpW/vvfee3nnnHf3FX/yF9u3bp1OnTunVV19dEn0zDEN/+Id/qG9961v69re/\nrXvvvVeWZS2JvmXcKhtrZb5TpKXx39583ylS9fSNQM9jKW1289xzz6m9vV0bNmxYMpv7fP/739fZ\ns2f1xBNP6Ctf+YpOnDihq1evLom+1dbW6lOf+pQikYgk6aGHHlI4HF4SfXvrrbf08ssv6/HHH9ef\n/MmfqKamRuPj40uibxm3wsZac79TpML7XInm+055/vnnq6ZvBHoeS2Wzm+eff161tbV6+OGHJRW+\nGVCl2rVrl/bu3au9e/fqT//0T3XvvffqD/7gD5ZE3z7+8Y/rtddeyz5+7bXXtGbNmiXRt8HBwWxb\nJSkSiejtt99eEn3LWOoba934nSItje+V+b5THn300arpG6vc83DbVKcanDhxQs8884zuv/9+PfHE\nE5Kkxx9/fMlt7mOapkzTXNBGR5Vo+fLluu+++7Rz507V1tZq9erV+sxnPqOZmZmq79t9992nn//8\n5/rCF76gcDisyclJ/eVf/qV+8pOfVH3fgsH0V2oxN9yqFJm+5fpOaWpqqvq+zZX5TpEW9vfpB65D\nBwBgCWDIHQCAJYBABwBgCSDQAQBYAgh0AACWAAIdAIAlgEAHAGAJINABAFgCCHQAAJaA/w8s8bpD\nAiJaIQAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x121842f10>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.distplot([len(x) for x in corpus])\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<br>\n",
    "# 형태소 분석"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "* konlpy Twitter 형태소 분석기를 활용한 '명사', '형용사', '동사'를 추출하는 Tokenizer"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "def nav_tokenizer(corpus):\n",
    "    twitter = Twitter()\n",
    "    pos = twitter.pos(corpus)\n",
    "    res = [x[0] for x in pos if (x[1] == u'Noun' or x[1] == u'Adjective' or x[1] == u'Verb')]\n",
    "    return res"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<br>\n",
    "* Stopwords를 분석 차원에서 제거하기 위한 함수 "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 390,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "def remove_stopwords(words, stopwords):\n",
    "    res = [x for x in words if x not in stopwords]\n",
    "    return res"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<br>\n",
    "* 빈출 단어 확인"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1180,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>word</th>\n",
       "      <th>count</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>4170</th>\n",
       "      <td>좋</td>\n",
       "      <td>1893</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>690</th>\n",
       "      <td>피부</td>\n",
       "      <td>828</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1149</th>\n",
       "      <td>피</td>\n",
       "      <td>725</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3764</th>\n",
       "      <td>겔</td>\n",
       "      <td>701</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3308</th>\n",
       "      <td>쓰</td>\n",
       "      <td>696</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2352</th>\n",
       "      <td>보습</td>\n",
       "      <td>510</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3874</th>\n",
       "      <td>크림</td>\n",
       "      <td>502</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3707</th>\n",
       "      <td>제품</td>\n",
       "      <td>497</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3114</th>\n",
       "      <td>바르</td>\n",
       "      <td>395</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>688</th>\n",
       "      <td>배송</td>\n",
       "      <td>388</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2351</th>\n",
       "      <td>써</td>\n",
       "      <td>359</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1478</th>\n",
       "      <td>구매</td>\n",
       "      <td>323</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4032</th>\n",
       "      <td>발라</td>\n",
       "      <td>316</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3730</th>\n",
       "      <td>너무</td>\n",
       "      <td>303</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3314</th>\n",
       "      <td>아기</td>\n",
       "      <td>302</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2642</th>\n",
       "      <td>잘</td>\n",
       "      <td>296</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2523</th>\n",
       "      <td>같아</td>\n",
       "      <td>284</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3184</th>\n",
       "      <td>얼굴</td>\n",
       "      <td>276</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1931</th>\n",
       "      <td>했</td>\n",
       "      <td>274</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3557</th>\n",
       "      <td>것</td>\n",
       "      <td>265</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>328</th>\n",
       "      <td>거</td>\n",
       "      <td>239</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1929</th>\n",
       "      <td>입니</td>\n",
       "      <td>234</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2985</th>\n",
       "      <td>가격</td>\n",
       "      <td>230</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2891</th>\n",
       "      <td>로션</td>\n",
       "      <td>228</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>583</th>\n",
       "      <td>저</td>\n",
       "      <td>218</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1295</th>\n",
       "      <td>있어</td>\n",
       "      <td>212</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>419</th>\n",
       "      <td>아이</td>\n",
       "      <td>202</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1222</th>\n",
       "      <td>쓰는</td>\n",
       "      <td>200</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2455</th>\n",
       "      <td>샀</td>\n",
       "      <td>198</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1020</th>\n",
       "      <td>건성</td>\n",
       "      <td>191</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3269</th>\n",
       "      <td>럽</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1351</th>\n",
       "      <td>러워</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4028</th>\n",
       "      <td>오니</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>311</th>\n",
       "      <td>러가지써밧</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4346</th>\n",
       "      <td>량</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>873</th>\n",
       "      <td>램</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1328</th>\n",
       "      <td>옥</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4652</th>\n",
       "      <td>래야</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4417</th>\n",
       "      <td>온더</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>291</th>\n",
       "      <td>랍</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2893</th>\n",
       "      <td>오옹</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4510</th>\n",
       "      <td>오십원</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2217</th>\n",
       "      <td>오반</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1044</th>\n",
       "      <td>령</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2094</th>\n",
       "      <td>롤러</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1363</th>\n",
       "      <td>오더</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1624</th>\n",
       "      <td>오드</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2967</th>\n",
       "      <td>론</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2465</th>\n",
       "      <td>오래되는</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1470</th>\n",
       "      <td>로즈힙오일</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2254</th>\n",
       "      <td>오래됩</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>787</th>\n",
       "      <td>오래오래</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4350</th>\n",
       "      <td>로즈힙</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2673</th>\n",
       "      <td>로숀</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2918</th>\n",
       "      <td>오로지</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2970</th>\n",
       "      <td>로서</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>977</th>\n",
       "      <td>오르는</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4433</th>\n",
       "      <td>오른</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1517</th>\n",
       "      <td>오름</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3353</th>\n",
       "      <td>힘듭니</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>4799 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       word  count\n",
       "4170  좋      1893 \n",
       "690   피부     828  \n",
       "1149  피      725  \n",
       "3764  겔      701  \n",
       "3308  쓰      696  \n",
       "2352  보습     510  \n",
       "3874  크림     502  \n",
       "3707  제품     497  \n",
       "3114  바르     395  \n",
       "688   배송     388  \n",
       "2351  써      359  \n",
       "1478  구매     323  \n",
       "4032  발라     316  \n",
       "3730  너무     303  \n",
       "3314  아기     302  \n",
       "2642  잘      296  \n",
       "2523  같아     284  \n",
       "3184  얼굴     276  \n",
       "1931  했      274  \n",
       "3557  것      265  \n",
       "328   거      239  \n",
       "1929  입니     234  \n",
       "2985  가격     230  \n",
       "2891  로션     228  \n",
       "583   저      218  \n",
       "1295  있어     212  \n",
       "419   아이     202  \n",
       "1222  쓰는     200  \n",
       "2455  샀      198  \n",
       "1020  건성     191  \n",
       "...   ..     ...  \n",
       "3269  럽      1    \n",
       "1351  러워     1    \n",
       "4028  오니     1    \n",
       "311   러가지써밧  1    \n",
       "4346  량      1    \n",
       "873   램      1    \n",
       "1328  옥      1    \n",
       "4652  래야     1    \n",
       "4417  온더     1    \n",
       "291   랍      1    \n",
       "2893  오옹     1    \n",
       "4510  오십원    1    \n",
       "2217  오반     1    \n",
       "1044  령      1    \n",
       "2094  롤러     1    \n",
       "1363  오더     1    \n",
       "1624  오드     1    \n",
       "2967  론      1    \n",
       "2465  오래되는   1    \n",
       "1470  로즈힙오일  1    \n",
       "2254  오래됩    1    \n",
       "787   오래오래   1    \n",
       "4350  로즈힙    1    \n",
       "2673  로숀     1    \n",
       "2918  오로지    1    \n",
       "2970  로서     1    \n",
       "977   오르는    1    \n",
       "4433  오른     1    \n",
       "1517  오름     1    \n",
       "3353  힘듭니    1    \n",
       "\n",
       "[4799 rows x 2 columns]"
      ]
     },
     "execution_count": 1180,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "vect0 = CountVectorizer(tokenizer=nav_tokenizer).fit(corpus)\n",
    "temp = pd.DataFrame(vect0.vocabulary_.keys(), columns=['word'])\n",
    "temp['idx'] = vect0.vocabulary_.values()\n",
    "temp.sort_values(by='idx', inplace=True)\n",
    "temp.drop('idx', axis=1, inplace=True)\n",
    "temp['count'] = vect0.transform(corpus).toarray().sum(axis=0)\n",
    "temp.sort_values(['count'], ascending=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<br>\n",
    "* 빈출 단어 제거  \n",
    "> 제품과 직접 관련이 있거나 너무 많은 빈도로 쓰인 상위 단어 제거"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1453,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "stopwords = [u'좋', u'피부', u'겔', u'피', u'쓰', u'크림']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1454,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "token n/a/v: 4793\n"
     ]
    }
   ],
   "source": [
    "vect = TfidfVectorizer(tokenizer=nav_tokenizer, stop_words=stopwords)\n",
    "vect.fit(corpus)\n",
    "print(\"token n/a/v: %d\" % len(vect.vocabulary_))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<br>\n",
    "* 1단어 어휘 중 Tokenizer의 성능으로 인해 무의미하게 수집된 어휘 제거"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1455,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "579"
      ]
     },
     "execution_count": 1455,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# '입, 뺨, 향, 손, 떡, 몇, 봄, 딸, 집, 코, 양, 년, 늘' 을 제외한 1단어 명사 명사 벡터 Stopwords에 추가\n",
    "mask1 = [x for x in vect.vocabulary_ if len(x) == 1]\n",
    "mask1 = [x for x in mask1 if x not in [u'입', u'뺨', u'향', u'손', u'떡', u'몇', u'봄', u'딸', u'집', u'코', u'양', u'년', u'좋', u'늘']]\n",
    "len(mask1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1456,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "token n/a/v: 4214\n"
     ]
    }
   ],
   "source": [
    "vect = TfidfVectorizer(tokenizer=nav_tokenizer, stop_words=stopwords + mask1)\n",
    "vect.fit(corpus)\n",
    "print(\"token n/a/v: %d\" % len(vect.vocabulary_))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1458,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "# corpus array for scikit-learn\n",
    "X = vect.transform(corpus).toarray()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<br>\n",
    "# LDA (Latent Dirichlet allocation)\n",
    "문서간 주제 찾기"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1460,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "lda_docs = [nav_tokenizer(x) for x in corpus]\n",
    "lda_docs = [remove_stopwords(x, stopwords + mask1) for x in lda_docs]\n",
    "lda_dict = corpora.Dictionary(lda_docs)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1461,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "#calulate TF-IDF\n",
    "tf_ps = [lda_dict.doc2bow(x) for x in lda_docs]\n",
    "tf_model = models.TfidfModel(tf_ps)\n",
    "tfidf_ps = tf_model[tf_ps]\n",
    "corpora.MmCorpus.serialize('ps.mm', tfidf_ps)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<br>\n",
    "* 15개 주제 모델링"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1474,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "# train topic model\n",
    "ntopics =12\n",
    "nwords = 5"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1475,
   "metadata": {
    "collapsed": false,
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[(0,\n",
      "  0.010*\"만족\" + 0.008*\"재구\" + 0.007*\"배송\" + 0.007*\"진리\" + 0.006*\"얼굴\"),\n",
      " (1,\n",
      "  0.021*\"너무\" + 0.010*\"가족\" + 0.007*\"있어\" + 0.007*\"촉촉하네\" + 0.006*\"아기\"),\n",
      " (2,\n",
      "  0.014*\"촉촉하니\" + 0.009*\"애기\" + 0.006*\"하나\" + 0.006*\"촉촉\" + 0.005*\"빨라\"),\n",
      " (3,\n",
      "  0.034*\"항상\" + 0.021*\"빠르\" + 0.018*\"배송\" + 0.011*\"필요없\" + 0.011*\"구매\"),\n",
      " (4,\n",
      "  0.044*\"보습\" + 0.022*\"촉촉하고\" + 0.015*\"아기\" + 0.012*\"늘\" + 0.012*\"발라\"),\n",
      " (5,\n",
      "  0.015*\"최고\" + 0.013*\"역시\" + 0.012*\"배송\" + 0.010*\"싸게\" + 0.009*\"신생아\"),\n",
      " (6,\n",
      "  0.024*\"역시\" + 0.013*\"늘\" + 0.009*\"제품\" + 0.009*\"아주\" + 0.008*\"배송\"),\n",
      " (7,\n",
      "  0.011*\"굿굿\" + 0.009*\"사용하고\" + 0.009*\"있어\" + 0.008*\"너무\" + 0.008*\"흡수\"),\n",
      " (8,\n",
      "  0.021*\"쓰는\" + 0.013*\"믿고\" + 0.008*\"제품\" + 0.007*\"받아\" + 0.007*\"적임\"),\n",
      " (9,\n",
      "  0.019*\"하게\" + 0.017*\"저렴\" + 0.014*\"건성\" + 0.011*\"생각\" + 0.010*\"무난\"),\n",
      " (10,\n",
      "  0.017*\"배송\" + 0.016*\"받았\" + 0.011*\"상품\" + 0.011*\"빠른\" + 0.010*\"완전\"),\n",
      " (11,\n",
      "  0.017*\"만족합\" + 0.012*\"늘\" + 0.010*\"촉촉함\" + 0.009*\"제품\" + 0.008*\"계속\")]\n"
     ]
    }
   ],
   "source": [
    "# LDA\n",
    "np.random.seed(0)  # optional\n",
    "lda = models.ldamodel.LdaModel(tfidf_ps, id2word=lda_dict, num_topics=ntopics)\n",
    "pprint(lda.print_topics(num_topics=ntopics, num_words=nwords))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1464,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "def get_labels(model, tres, sentence):\n",
    "    lda = model\n",
    "    proba_list = lda[sentence]\n",
    "    res = [x for x in proba_list if x[1] >= tres]\n",
    "    if len(res) == 0:\n",
    "        res = None\n",
    "    return res"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<br>\n",
    "* Probability 0.3 수준에서 라벨링 테이블 작성"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1479,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "dfRes = pd.DataFrame(corpus, columns=['text'])\n",
    "for i in range(12):\n",
    "    dfRes[i] = 0; \n",
    "dfRes['unknown'] = 0\n",
    "    \n",
    "for i in range(len(tf_ps)):\n",
    "    temp = get_labels(lda, 0.3, tf_ps[i])\n",
    "    if temp != None:\n",
    "        idx = [x[0] for x in temp]\n",
    "        dfRes.set_value(i, idx, 1)\n",
    "    elif temp == None:\n",
    "        dfRes.set_value(i, ['unknown'], 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1480,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "label(0): 276\n",
      "label(1): 245\n",
      "label(2): 159\n",
      "label(3): 353\n",
      "label(4): 525\n",
      "label(5): 346\n",
      "label(6): 228\n",
      "label(7): 245\n",
      "label(8): 192\n",
      "label(9): 232\n",
      "label(10): 288\n",
      "label(11): 296\n",
      "unknown: 243\n"
     ]
    }
   ],
   "source": [
    "# number of reviews for each label\n",
    "for i in range(12):\n",
    "    print('label({}): {}'.format(i, len(dfRes[(dfRes[i] == 1)])))\n",
    "print('unknown: {}'.format(len(dfRes[(dfRes['unknown'] == 1)])))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<br>\n",
    "* <b>라벨 0:</b> (만족 + 재구 + 배송 + 진리 + 얼굴) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1485,
   "metadata": {
    "collapsed": false,
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>text</th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>3</th>\n",
       "      <th>4</th>\n",
       "      <th>5</th>\n",
       "      <th>6</th>\n",
       "      <th>7</th>\n",
       "      <th>8</th>\n",
       "      <th>9</th>\n",
       "      <th>10</th>\n",
       "      <th>11</th>\n",
       "      <th>unknown</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>몇 년째 쓰는 제품이예요~\\n다른 기초화장품 없이 피지오겔크링과 선크림으로\\n피부가 좋아졌 어요~~ 여름이면 항상 얼굴이  따끔거렸는데 \\n그것도 다 없어지고~  암튼 전 화장품은 이거 하나만발라요~\\n자극도 없고 완전 좋은 제품입니다~~</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>가격부담이 되도 계속 쓰고 있는 피지오겔 크림\\n귀찮을때 이거 하나만 바르고 자도 다음날 화장 잘먹고 얼굴에서 광나요\\n전 밤엔 듬뿍 아침엔 적당량만 발라요(집순이일땐 듬뿍)\\n건성 민감성 피부에 좋아요 무향에 자극없고 보습력 좋아요\\n로켓배송 덕분에 빠르게 쓸 수 있어서 좋았어요</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>피지오겔~7년째사용중~~</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>피지오겔 크림은 몇년째 사용중이에요~\\n예민한 남매 피부에 잘맞아요~\\n끈적임없이 촉촉해요\\n향도 거부감없이  무향에 가까운듯해요\\n몇년째 꾸준히 잘 쓰고있어요~^^</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>44</th>\n",
       "      <td>저는 지금 6개월째 계속 쓰고있는데  엄마도 하나 사달래서 또 구매합니다! 이거 후기 작성도 세번째네요 여기서구매하면  좀더 저렴하게 구입할수있어 항상 쿠팡에서 주문합니다! 민감한 피부 여드름피부 건조한피부 무조건 구매하세요</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>51</th>\n",
       "      <td>너무나 유명한 피지오겔 제품입니다. 피부 건조증을 한번에 해결합니다.</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>55</th>\n",
       "      <td>워낙에 유명한제품~~\\n열많은 울아가 아토피안되려면ㆍ보습 무지잘~~\\n해야해서ㆍ\\n믿고ㆍ쓰는제품ㆍ\\n추가구매했네요^^</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>98</th>\n",
       "      <td>갑자기 아토피가 생겨서 급하게 쿠팡에서 샀어요~\\n한통도 다 쓰기번에 원래피부로 다시 돌아왔어요!!\\n어쩜 참 신기한 물건입니다~~</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>104</th>\n",
       "      <td>예민한 피부인데 소문대로 트라블도 안나고 \\n순한제품인거같아 좋아요~~~! 재구매의사잇습니당</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>106</th>\n",
       "      <td>얜 보습 최고죠\\n재구매합니다</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                                                                                                                              text  \\\n",
       "1    몇 년째 쓰는 제품이예요~\\n다른 기초화장품 없이 피지오겔크링과 선크림으로\\n피부가 좋아졌 어요~~ 여름이면 항상 얼굴이  따끔거렸는데 \\n그것도 다 없어지고~  암튼 전 화장품은 이거 하나만발라요~\\n자극도 없고 완전 좋은 제품입니다~~                           \n",
       "3    가격부담이 되도 계속 쓰고 있는 피지오겔 크림\\n귀찮을때 이거 하나만 바르고 자도 다음날 화장 잘먹고 얼굴에서 광나요\\n전 밤엔 듬뿍 아침엔 적당량만 발라요(집순이일땐 듬뿍)\\n건성 민감성 피부에 좋아요 무향에 자극없고 보습력 좋아요\\n로켓배송 덕분에 빠르게 쓸 수 있어서 좋았어요   \n",
       "7    피지오겔~7년째사용중~~                                                                                                                                                   \n",
       "27   피지오겔 크림은 몇년째 사용중이에요~\\n예민한 남매 피부에 잘맞아요~\\n끈적임없이 촉촉해요\\n향도 거부감없이  무향에 가까운듯해요\\n몇년째 꾸준히 잘 쓰고있어요~^^                                                                    \n",
       "44   저는 지금 6개월째 계속 쓰고있는데  엄마도 하나 사달래서 또 구매합니다! 이거 후기 작성도 세번째네요 여기서구매하면  좀더 저렴하게 구입할수있어 항상 쿠팡에서 주문합니다! 민감한 피부 여드름피부 건조한피부 무조건 구매하세요                                   \n",
       "51   너무나 유명한 피지오겔 제품입니다. 피부 건조증을 한번에 해결합니다.                                                                                                                          \n",
       "55   워낙에 유명한제품~~\\n열많은 울아가 아토피안되려면ㆍ보습 무지잘~~\\n해야해서ㆍ\\n믿고ㆍ쓰는제품ㆍ\\n추가구매했네요^^                                                                                               \n",
       "98   갑자기 아토피가 생겨서 급하게 쿠팡에서 샀어요~\\n한통도 다 쓰기번에 원래피부로 다시 돌아왔어요!!\\n어쩜 참 신기한 물건입니다~~                                                                                       \n",
       "104  예민한 피부인데 소문대로 트라블도 안나고 \\n순한제품인거같아 좋아요~~~! 재구매의사잇습니당                                                                                                             \n",
       "106  얜 보습 최고죠\\n재구매합니다                                                                                                                                                \n",
       "\n",
       "     0  1  2  3  4  5  6  7  8  9  10  11  unknown  \n",
       "1    1  0  0  0  0  0  0  0  0  0  0   0   0        \n",
       "3    1  0  0  0  0  0  0  0  0  0  1   0   0        \n",
       "7    1  0  0  0  0  0  0  0  0  0  0   0   0        \n",
       "27   1  0  0  1  0  0  0  0  0  0  0   0   0        \n",
       "44   1  0  0  0  0  0  0  0  0  0  0   0   0        \n",
       "51   1  0  0  0  0  0  0  0  0  0  0   0   0        \n",
       "55   1  0  0  1  0  0  0  0  0  0  0   0   0        \n",
       "98   1  0  0  0  0  0  0  0  0  0  0   0   0        \n",
       "104  1  0  0  0  0  0  1  0  0  0  0   0   0        \n",
       "106  1  0  0  0  1  0  0  0  0  0  0   0   0        "
      ]
     },
     "execution_count": 1485,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dfRes[dfRes[0] == 1].head(10)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<br>\n",
    "* <b>라벨 1:</b> 너무 + 가족 + 있어 + 촉촉하네 + 아기"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1486,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>text</th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>3</th>\n",
       "      <th>4</th>\n",
       "      <th>5</th>\n",
       "      <th>6</th>\n",
       "      <th>7</th>\n",
       "      <th>8</th>\n",
       "      <th>9</th>\n",
       "      <th>10</th>\n",
       "      <th>11</th>\n",
       "      <th>unknown</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>조금 기름진느낌이 없지않아있어요</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>잘받았습니다 좋은상풒</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36</th>\n",
       "      <td>좋아요 추천합니다</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>43</th>\n",
       "      <td>지인 추천으로 쓰게된 화장품이에용\\n\\n아직 몇 번 사용하지 않아 잘 모르지만\\n\\n지인에게 추천받았을 때 \\n\\n성분이 좋다해서 받았어용 \\n\\n그래서 그런지 발랐을 때 순한 느낌은 있어용!\\n\\n로켓배송이라 주문 다음날 받았어용 ㅎㅎ</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>90</th>\n",
       "      <td>임신때부터 쓰던 피지오겔. \\n아이도 엄마도 아빠도 같이 씁니다. \\n성분도 순하고 좋아요.</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>103</th>\n",
       "      <td>건성타입의 10살난 우리 딸아이 아가때 소아과 선생님으로부터 추천받아서 쭉 써왔습니다. 아이가 커가면서 몇번  다른 제품 써봤는데, 전 이 제품이 제일 믿음이 가고 괜찮은것 같아요~</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>116</th>\n",
       "      <td>아이들용 아토피 로션 쓰다가 보습력이 부족해 한번 사용해 봤는데요. 보습력은 이전 시용하던 로션과 별 차이가 없었습니다. 피부와 겉돌면서 흡수되않고 미끌거리는 텍스츄어가 일단 비호감이였는데 피부톤 밝아진다고 하길래 한통 다 사용해보기로 했습니다. 사용하는 내내 피부하고 맞지않는 성분이 있어서 그런가 얼굴이 가렵고 눈밑에 정체를 알수없는 무엇이 났어요. 150ml 사용하고 다시 아토피로션으로 돌아갑니다.</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>119</th>\n",
       "      <td>이건뭐\\n말안해도아시죠?\\n매우아주만족</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>128</th>\n",
       "      <td>아가랑 엄마랑 같이 쓰려고 구매해요~~</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>129</th>\n",
       "      <td>피지오겔 번들거림 참 좋네요.피부가 건성이라 번들거리는 크림 찾았는데 앞으로도 계속 애용할게요~</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                                                                                                                                                                                                   text  \\\n",
       "2    조금 기름진느낌이 없지않아있어요                                                                                                                                                                                                                    \n",
       "23   잘받았습니다 좋은상풒                                                                                                                                                                                                                          \n",
       "36   좋아요 추천합니다                                                                                                                                                                                                                            \n",
       "43   지인 추천으로 쓰게된 화장품이에용\\n\\n아직 몇 번 사용하지 않아 잘 모르지만\\n\\n지인에게 추천받았을 때 \\n\\n성분이 좋다해서 받았어용 \\n\\n그래서 그런지 발랐을 때 순한 느낌은 있어용!\\n\\n로켓배송이라 주문 다음날 받았어용 ㅎㅎ                                                                                                 \n",
       "90   임신때부터 쓰던 피지오겔. \\n아이도 엄마도 아빠도 같이 씁니다. \\n성분도 순하고 좋아요.                                                                                                                                                                                  \n",
       "103  건성타입의 10살난 우리 딸아이 아가때 소아과 선생님으로부터 추천받아서 쭉 써왔습니다. 아이가 커가면서 몇번  다른 제품 써봤는데, 전 이 제품이 제일 믿음이 가고 괜찮은것 같아요~                                                                                                                                \n",
       "116  아이들용 아토피 로션 쓰다가 보습력이 부족해 한번 사용해 봤는데요. 보습력은 이전 시용하던 로션과 별 차이가 없었습니다. 피부와 겉돌면서 흡수되않고 미끌거리는 텍스츄어가 일단 비호감이였는데 피부톤 밝아진다고 하길래 한통 다 사용해보기로 했습니다. 사용하는 내내 피부하고 맞지않는 성분이 있어서 그런가 얼굴이 가렵고 눈밑에 정체를 알수없는 무엇이 났어요. 150ml 사용하고 다시 아토피로션으로 돌아갑니다.   \n",
       "119  이건뭐\\n말안해도아시죠?\\n매우아주만족                                                                                                                                                                                                                \n",
       "128  아가랑 엄마랑 같이 쓰려고 구매해요~~                                                                                                                                                                                                                \n",
       "129  피지오겔 번들거림 참 좋네요.피부가 건성이라 번들거리는 크림 찾았는데 앞으로도 계속 애용할게요~                                                                                                                                                                                \n",
       "\n",
       "     0  1  2  3  4  5  6  7  8  9  10  11  unknown  \n",
       "2    0  1  0  0  0  0  0  0  0  0  0   0   0        \n",
       "23   0  1  0  0  0  0  0  0  0  0  1   0   0        \n",
       "36   0  1  0  0  0  0  0  0  0  0  0   0   0        \n",
       "43   0  1  0  0  0  0  0  0  0  0  1   0   0        \n",
       "90   0  1  0  0  0  0  0  0  0  0  0   0   0        \n",
       "103  0  1  0  0  0  0  0  0  0  0  0   0   0        \n",
       "116  0  1  0  0  0  0  0  0  0  0  0   0   0        \n",
       "119  1  1  0  0  0  0  0  0  0  0  0   0   0        \n",
       "128  0  1  0  0  0  0  0  0  0  0  1   0   0        \n",
       "129  0  1  0  0  0  0  0  0  0  0  0   0   0        "
      ]
     },
     "execution_count": 1486,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dfRes[dfRes[1] == 1].head(10)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<br>\n",
    "* <b>라벨 3:</b> (항상 + 빠르 + 배송 + 필요없 + 구매) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1483,
   "metadata": {
    "collapsed": false,
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>text</th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>3</th>\n",
       "      <th>4</th>\n",
       "      <th>5</th>\n",
       "      <th>6</th>\n",
       "      <th>7</th>\n",
       "      <th>8</th>\n",
       "      <th>9</th>\n",
       "      <th>10</th>\n",
       "      <th>11</th>\n",
       "      <th>unknown</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>항상 쓰던 제품입니다 좋아요~~</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>배송도 빠르고 좋으네영</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>촉촉해요~~!!</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>역쉬 보습 짱!</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>피지오겔 크림은 몇년째 사용중이에요~\\n예민한 남매 피부에 잘맞아요~\\n끈적임없이 촉촉해요\\n향도 거부감없이  무향에 가까운듯해요\\n몇년째 꾸준히 잘 쓰고있어요~^^</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34</th>\n",
       "      <td>지인의 소개로 제품사서 지금 반이상 사용했는데 정말 좋습니다.\\n피부가 맑아보이고 광이 나는 느낌 입니다.\\n그리고 수분력또한 짱이네요~~ 강추</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40</th>\n",
       "      <td>굿궇\\n\\n항상써요^^</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>55</th>\n",
       "      <td>워낙에 유명한제품~~\\n열많은 울아가 아토피안되려면ㆍ보습 무지잘~~\\n해야해서ㆍ\\n믿고ㆍ쓰는제품ㆍ\\n추가구매했네요^^</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57</th>\n",
       "      <td>항상 쓰는 피지오겔~ 보습력 짱입니다!!</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>63</th>\n",
       "      <td>좀 비씬감이있어 망설이다 애기랑 같이 써볼까하고 주문햇어요.역시나 입구 막는 스티커가 없네요 원래 다 있던데..괜찮은 거겠죠? 제가 얼굴이 마니 푸석한 편이라 수분 크림을 디따 마니 바르거든요..그때뿐이더라구요..이건 바르고 한참 지났는데도 촉촉함이 오래가긴하네여 담날까지..여름앤 좀 끈적인감이있어 시러하는분도 꽤 될듯..전 나름 괜찮은것 같아요 물광피부처럼 보여서ㅎㅎ</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                                                                                                                                                                               text  \\\n",
       "8   항상 쓰던 제품입니다 좋아요~~                                                                                                                                                                                                 \n",
       "9   배송도 빠르고 좋으네영                                                                                                                                                                                                      \n",
       "15  촉촉해요~~!!                                                                                                                                                                                                          \n",
       "18  역쉬 보습 짱!                                                                                                                                                                                                          \n",
       "27  피지오겔 크림은 몇년째 사용중이에요~\\n예민한 남매 피부에 잘맞아요~\\n끈적임없이 촉촉해요\\n향도 거부감없이  무향에 가까운듯해요\\n몇년째 꾸준히 잘 쓰고있어요~^^                                                                                                                      \n",
       "34  지인의 소개로 제품사서 지금 반이상 사용했는데 정말 좋습니다.\\n피부가 맑아보이고 광이 나는 느낌 입니다.\\n그리고 수분력또한 짱이네요~~ 강추                                                                                                                                  \n",
       "40  굿궇\\n\\n항상써요^^                                                                                                                                                                                                      \n",
       "55  워낙에 유명한제품~~\\n열많은 울아가 아토피안되려면ㆍ보습 무지잘~~\\n해야해서ㆍ\\n믿고ㆍ쓰는제품ㆍ\\n추가구매했네요^^                                                                                                                                                 \n",
       "57  항상 쓰는 피지오겔~ 보습력 짱입니다!!                                                                                                                                                                                            \n",
       "63  좀 비씬감이있어 망설이다 애기랑 같이 써볼까하고 주문햇어요.역시나 입구 막는 스티커가 없네요 원래 다 있던데..괜찮은 거겠죠? 제가 얼굴이 마니 푸석한 편이라 수분 크림을 디따 마니 바르거든요..그때뿐이더라구요..이건 바르고 한참 지났는데도 촉촉함이 오래가긴하네여 담날까지..여름앤 좀 끈적인감이있어 시러하는분도 꽤 될듯..전 나름 괜찮은것 같아요 물광피부처럼 보여서ㅎㅎ   \n",
       "\n",
       "    0  1  2  3  4  5  6  7  8  9  10  11  unknown  \n",
       "8   0  0  0  1  0  0  0  0  0  0  0   0   0        \n",
       "9   0  0  0  1  0  0  0  0  0  0  0   0   0        \n",
       "15  0  0  0  1  0  0  0  0  0  0  0   0   0        \n",
       "18  0  0  0  1  0  0  0  0  0  0  0   0   0        \n",
       "27  1  0  0  1  0  0  0  0  0  0  0   0   0        \n",
       "34  0  0  0  1  0  0  0  0  0  0  0   1   0        \n",
       "40  0  0  0  1  0  0  0  1  0  0  0   0   0        \n",
       "55  1  0  0  1  0  0  0  0  0  0  0   0   0        \n",
       "57  0  0  0  1  0  0  0  0  0  0  0   0   0        \n",
       "63  0  0  0  1  0  0  0  0  0  0  0   0   0        "
      ]
     },
     "execution_count": 1483,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dfRes[dfRes[3] == 1].head(10)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<br>\n",
    "* <b>라벨이 부여되지 않은 리뷰</b>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1224,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>text</th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>3</th>\n",
       "      <th>4</th>\n",
       "      <th>5</th>\n",
       "      <th>6</th>\n",
       "      <th>7</th>\n",
       "      <th>8</th>\n",
       "      <th>9</th>\n",
       "      <th>10</th>\n",
       "      <th>11</th>\n",
       "      <th>12</th>\n",
       "      <th>13</th>\n",
       "      <th>14</th>\n",
       "      <th>unknown</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>좋네요</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>좋습니다</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>좋아요</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>62</th>\n",
       "      <td>좋아요</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>72</th>\n",
       "      <td>좋아요~~^^</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       text  0  1  2  3  4  5  6  7  8  9  10  11  12  13  14  unknown\n",
       "10  좋네요      0  0  0  0  0  0  0  0  0  0  0   0   0   0   0   1      \n",
       "13  좋습니다     0  0  0  0  0  0  0  0  0  0  0   0   0   0   0   1      \n",
       "20  좋아요      0  0  0  0  0  0  0  0  0  0  0   0   0   0   0   1      \n",
       "62  좋아요      0  0  0  0  0  0  0  0  0  0  0   0   0   0   0   1      \n",
       "72  좋아요~~^^  0  0  0  0  0  0  0  0  0  0  0   0   0   0   0   1      "
      ]
     },
     "execution_count": 1224,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dfRes[dfRes['unknown'] == 1].head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### LDA 성능\n",
    "* Treshold 수준을 조정함에 따라 중복을 허용하는 클러스터링 가능\n",
    "* Document를 주제 단위로 클러스터링 가능 \n",
    "* 비슷한 주제어를 가진 리뷰들끼리 클러스터링하나 완벽하지 않음"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<br>\n",
    "# Doc2Vec\n",
    "Gensim 패키지의 Doc2Vec Embedding을 활용한 문서 클러스터링"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1279,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "d2v_docs = [nav_tokenizer(x) for x in corpus]\n",
    "d2v_docs = [remove_stopwords(x, (stopwords + mask1)) for x in d2v_docs]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1280,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "tagged_d2v_docs = [TaggedDocument(d, [0]) for d in d2v_docs]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1428,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "doc_vectorizer = doc2vec.Doc2Vec(size=300, alpha=0.025, min_alpha=0.025, seed=0)\n",
    "doc_vectorizer.build_vocab(tagged_d2v_docs)\n",
    "doc_vectorizer.train_lbls = False # 라벨은 학습대상에서 제외\n",
    "doc_vectorizer.train_words = True # 어휘간 관계만 학습"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1429,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "for epoch in range(10):\n",
    "    doc_vectorizer.train(tagged_d2v_docs, total_examples=len(d2v_docs), epochs=epoch)\n",
    "    doc_vectorizer.alpha -= 0.002 # decrease the learning rate\n",
    "    doc_vectorizer.min_alpha = doc_vectorizer.alpha # fix the learning rate, no decay"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<br>\n",
    "* 유사 어휘 탐색"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1489,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[(사춘기, 0.9723444581031799),\n",
      " (습진, 0.9677566885948181),\n",
      " (둘째, 0.9676264524459839),\n",
      " (아토피, 0.9675815105438232),\n",
      " (아들, 0.965859055519104),\n",
      " (여러, 0.9618515968322754),\n",
      " (좋아져, 0.9616037607192993),\n",
      " (여러가지, 0.9597474336624146),\n",
      " (날씨, 0.9592030644416809),\n",
      " (사용해, 0.9589396715164185)]\n"
     ]
    }
   ],
   "source": [
    "pprint(doc_vectorizer.most_similar(u'아이'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1439,
   "metadata": {
    "collapsed": false,
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "896"
      ]
     },
     "execution_count": 1439,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(doc_vectorizer.wv.vocab)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1440,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "X_d2v = [doc_vectorizer.infer_vector(x.words) for x in tagged_d2v_docs]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "* nltk k-means w/ doc2vec"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1492,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "from nltk.cluster.kmeans import KMeansClusterer\n",
    "import nltk"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1493,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Error: no centroid defined for empty cluster.\n",
      "Try setting argument 'avoid_empty_clusters' to True\n"
     ]
    },
    {
     "ename": "AssertionError",
     "evalue": "",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mAssertionError\u001b[0m                            Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-1493-e0b42178f6fd>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0mkm1\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mKMeansClusterer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mNUM_CLUSTERS\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdistance\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mnltk\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcluster\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mutil\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcosine_distance\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mrepeats\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m100\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 4\u001b[0;31m \u001b[0mclusters\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mkm1\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcluster\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_d2v\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0massign_clusters\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[0;32m/Users/choiyoungrok/anaconda/lib/python2.7/site-packages/nltk/cluster/util.pyc\u001b[0m in \u001b[0;36mcluster\u001b[0;34m(self, vectors, assign_clusters, trace)\u001b[0m\n\u001b[1;32m     56\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     57\u001b[0m         \u001b[0;31m# call abstract method to cluster the vectors\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 58\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcluster_vectorspace\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvectors\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtrace\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     59\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     60\u001b[0m         \u001b[0;31m# assign the vectors to clusters\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/Users/choiyoungrok/anaconda/lib/python2.7/site-packages/nltk/cluster/kmeans.pyc\u001b[0m in \u001b[0;36mcluster_vectorspace\u001b[0;34m(self, vectors, trace)\u001b[0m\n\u001b[1;32m     83\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_means\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0mtrial\u001b[0m \u001b[0;34m>\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     84\u001b[0m                 \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_means\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_rng\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msample\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlist\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvectors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_num_means\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 85\u001b[0;31m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_cluster_vectorspace\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvectors\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtrace\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     86\u001b[0m             \u001b[0mmeanss\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_means\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     87\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/Users/choiyoungrok/anaconda/lib/python2.7/site-packages/nltk/cluster/kmeans.pyc\u001b[0m in \u001b[0;36m_cluster_vectorspace\u001b[0;34m(self, vectors, trace)\u001b[0m\n\u001b[1;32m    122\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    123\u001b[0m                 \u001b[0;31m# recalculate cluster means by computing the centroid of each cluster\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 124\u001b[0;31m                 \u001b[0mnew_means\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mlist\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmap\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_centroid\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mclusters\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_means\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    125\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    126\u001b[0m                 \u001b[0;31m# measure the degree of change from the previous step for convergence\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/Users/choiyoungrok/anaconda/lib/python2.7/site-packages/nltk/cluster/kmeans.pyc\u001b[0m in \u001b[0;36m_centroid\u001b[0;34m(self, cluster, mean)\u001b[0m\n\u001b[1;32m    171\u001b[0m                 \u001b[0msys\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstderr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwrite\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'Error: no centroid defined for empty cluster.\\n'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    172\u001b[0m                 \u001b[0msys\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstderr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwrite\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'Try setting argument \\'avoid_empty_clusters\\' to True\\n'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 173\u001b[0;31m                 \u001b[0;32massert\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mFalse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    174\u001b[0m             \u001b[0mcentroid\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcluster\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    175\u001b[0m             \u001b[0;32mfor\u001b[0m \u001b[0mvector\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mcluster\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mAssertionError\u001b[0m: "
     ]
    }
   ],
   "source": [
    "NUM_CLUSTERS = 8\n",
    "\n",
    "km1 = KMeansClusterer(NUM_CLUSTERS, distance=nltk.cluster.util.cosine_distance, repeats=100)\n",
    "clusters = km1.cluster(X_d2v, assign_clusters=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "* ### k-means w/ doc2vec"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1413,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "cnum = 8"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1446,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Silhouette Coefficient: 0.116\n"
     ]
    }
   ],
   "source": [
    "km = KMeans(n_clusters=cnum, init='k-means++', max_iter=300, n_init=10, tol=0.0001)\n",
    "km.fit(X_d2v)\n",
    "print(\"Silhouette Coefficient: %0.3f\" % silhouette_score(X_d2v, km.labels_))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1447,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "label0: 470\n",
      "label1: 1012\n",
      "label2: 312\n",
      "label3: 136\n",
      "label4: 7\n",
      "label5: 301\n",
      "label6: 797\n",
      "label7: 37\n"
     ]
    }
   ],
   "source": [
    "dfRes = pd.DataFrame(corpus, columns=['text'])\n",
    "dfRes['label'] = km.labels_\n",
    "\n",
    "for i in range(cnum):\n",
    "    print('label{}: {}'.format(i, len(dfRes[dfRes.label == i])))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1448,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "cluster 0: 보습 크림 배송 제품 바르 \n",
      "cluster 1: 보습 배송 제품 아기 항상 \n",
      "cluster 2: 배송 제품 보습 크림 같아 \n",
      "cluster 3: 크림 바르 발라 얼굴 제품 \n",
      "cluster 4: 제품 크림 발라 보습 로션 \n",
      "cluster 5: 크림 바르 제품 얼굴 보습 \n",
      "cluster 6: 보습 제품 배송 구매 크림 \n",
      "cluster 7: 크림 바르 제품 발라 보습 \n"
     ]
    }
   ],
   "source": [
    "for i in range(cnum):\n",
    "    print('cluster {}:'.format(i)),\n",
    "    print_topwords(df=dfRes.loc[dfRes['label'] == i], num=5, bar=False)\n",
    "    print(\"\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<br>\n",
    "* ### Agglomerative Clustering w/ doc2vec"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1449,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "cnum = 8"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1450,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Silhouette Coefficient: 0.047\n"
     ]
    }
   ],
   "source": [
    "agg = AgglomerativeClustering(n_clusters=cnum, affinity='euclidean', linkage='ward')\n",
    "agg.fit(X_d2v)\n",
    "print(\"Silhouette Coefficient: %0.3f\" % silhouette_score(X_d2v, agg.labels_))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1451,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "label 0: 1636\n",
      "label 1: 7\n",
      "label 2: 552\n",
      "label 3: 228\n",
      "label 4: 63\n",
      "label 5: 99\n",
      "label 6: 385\n",
      "label 7: 102\n"
     ]
    }
   ],
   "source": [
    "dfRes = pd.DataFrame(corpus, columns=['text'])\n",
    "dfRes['label'] = agg.labels_\n",
    "for i in range(len(dfRes.label.unique())):\n",
    "    print('label {}: {}'.format(i, len(dfRes.loc[dfRes['label'] == i])))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1452,
   "metadata": {
    "collapsed": false,
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "cluster 0: 보습 배송 제품 크림 구매 \n",
      "cluster 1: 제품 크림 발라 보습 로션 \n",
      "cluster 2: 제품 크림 보습 바르 구매 \n",
      "cluster 3: 크림 바르 제품 발라 얼굴 \n",
      "cluster 4: 크림 바르 제품 발라 보습 \n",
      "cluster 5: 배송 제품 받았 같아 쿠팡 \n",
      "cluster 6: 보습 항상 촉촉하고 역시 가격 \n",
      "cluster 7: 크림 바르 얼굴 제품 발라 \n"
     ]
    }
   ],
   "source": [
    "for i in range(cnum):\n",
    "    print('cluster {}:'.format(i)),\n",
    "    print_topwords(df=dfRes.loc[dfRes['label'] == i], num=5, bar=False)\n",
    "    print(\"\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<br>\n",
    "* ### DBSCAN w/ doc2vec\n",
    "Density-based Spatial Clustering of Aplications with Noise"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1382,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "db = DBSCAN(eps=0.2, min_samples=10, metric='euclidean')\n",
    "Y = db.fit_predict(X_d2v)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1383,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Estimated number of clusters: 1\n",
      "Silhouette Coefficient: 0.394\n"
     ]
    }
   ],
   "source": [
    "# Number of clusters in labels, ignoring noise if present.\n",
    "cnum = len(set(db.labels_)) - (1 if -1 in db.labels_ else 0)\n",
    "\n",
    "print('Estimated number of clusters: %d' % cnum)\n",
    "print(\"Silhouette Coefficient: %0.3f\" % metrics.silhouette_score(X_d2v, db.labels_))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1385,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "dfRes = pd.DataFrame(corpus, columns=['text'])\n",
    "dfRes['label'] = Y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1386,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "noise-1: 706\n",
      "label 0: 2366\n"
     ]
    }
   ],
   "source": [
    "for i in range(len(dfRes.label.unique())):\n",
    "    if i == 0 :\n",
    "        print('noise-1: {}'.format(len(dfRes.loc[dfRes['label'] == i-1])))\n",
    "    else:\n",
    "        print('label {}: {}'.format(i-1, len(dfRes.loc[dfRes['label'] == i-1])))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1387,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "cluster -1: 크림 제품 바르 발라 보습 \n",
      "cluster 0: 보습 제품 배송 크림 너무 \n"
     ]
    }
   ],
   "source": [
    "for i in range(-1, cnum):\n",
    "    print('cluster {}:'.format(i)),\n",
    "    print_topwords(df=dfRes.loc[dfRes['label'] == i], num=5, bar=False)\n",
    "    print(\"\")"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 2",
   "language": "python",
   "name": "python2"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
